input AddCoinInput {
  symbol: String!
  executeOrder: Boolean!
  generateSignal: Boolean!
  sendEmail: Boolean!
}

input AddPromptInput {
  role: String!
  prompt: String!
  enabled: Boolean!
}

type Coin {
  id: ID
  symbol: String
  userId: String
  executeOrder: Boolean
  generateSignal: Boolean
  sendEmail: Boolean
}

input DeleteCoinInput {
  id: ID!
}

input DeletePromptInput {
  id: ID!
}

type Prompt {
  id: ID
  userId: String
  role: String
  prompt: String
  enabled: Boolean
}

input UpdateCoinInput {
  id: ID!
  symbol: String!
  executeOrder: Boolean!
  generateSignal: Boolean!
  sendEmail: Boolean!
}

input UpdatePromptInput {
  id: ID!
  role: String!
  prompt: String!
  enabled: Boolean!
}

type Mutation {
  addCoin(input: AddCoinInput!): Coin!
  updateCoin(input: UpdateCoinInput!): Boolean!
  deleteCoin(input: DeleteCoinInput!): Boolean!
  addPrompt(input: AddPromptInput!): Prompt!
  deletePrompt(input: DeletePromptInput!): Boolean!
  updatePrompt(input: UpdatePromptInput!): Boolean!
}

type Query {
  getCoins: [Coin]
  getPrompts: [Prompt]
}

schema {
  query: Query
  mutation: Mutation
}
